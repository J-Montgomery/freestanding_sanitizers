{
    "signed_addition_overflow": {
        "output1": "signed integer overflow: value cannot be represented in type",
        "output2": "\\([0-9]+ \\+ 1\\)"
    },

    "unsigned_addition_overflow": {
        "output1": "unsigned integer overflow: value cannot be represented in type",
        "output2": "\\([0-9]+ \\+ 1\\)"
    },

    "shift_overflow": {
        "output1": "invalid shift for types",
        "output2": "shift base: \\([0-9]+\\)",
        "output3": "shift exponent: \\([0-9]+\\)"
    },

    "float_invalid_division": {
        "output1": "division of \\(.+\\) cannot be represented in type"
    },

    "signed_invalid_division": {
        "output1": "signed division of \\(.+\\) cannot be represented in type"
    },

    "unsigned_invalid_division": {
        "output1": "unsigned division of \\(.+\\) cannot be represented in type"
    },

    "invalid_load_bool": {
        "output1": "invalid value to load in type"
    },

    "test_death_override": {
        "output1": "store to null pointer",
        "output2": "^Custom Death Message$"
    }
}
